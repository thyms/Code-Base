Shell Commands
--------------
man	                     - format and display the on-line manual pages
env	                     - set and print environment
mkdir           	     - make directories
touch	                 - change file access and modification times
rm				         - remove directory entries
rmdir	                 - remove directories
chmod	                 - change file modes or Access Control Lists
ps	                     - process status(ps aux)
whatis					 - search the whatis database for complete words.
apropos					 - search the whatis database for strings
whereis					 -  locate the binary, source, and manual page files for a command
which					 - locate a command
locate	                 - find filenames quickly
locate.updatedb	         - update locate database(/usr/libexec/locate.updatedb)
find	                 - walk a file hierarchy
tar	                     - Tar file creation, extraction & manipulation
shutdown	             - close down the system at a given time
kill                     - terminate or signal a process
w	                     - display who is logged in and what they are doing
finger	                 - user information lookup program
df	                     - display free disk space
du   	                 - display disk usage statistics
ln			             - make links(ln -s for soft link. hard link effects the original file, delete hard link and original file is gone)
tail                     - display the last part of a file
pwd	                     - return working directory name
fdisk	                 - DOS partition maintenance program
uname	                 - Print operating system name
sw_vers	                 - print Mac OS X operating system version information
uptime	                 - show how long system has been running
col	                     - filter reverse line feeds from input
wget(1)                  - The non-interactive network downloader
!!						 - executes the last command in history(sudo !!)
!1						 - executes the 1th command in history
!-1						 - executes the 1th command in history before the current one
!cat					 - executes the last command that starts with 'cat'
!cat:p					 - prints the last command that starts with 'cat'
cd !$					 - gives the last argument in previous command. Say you ran 'mkdir xxx' command, this will run 'cd xxx' command.
cd -					 - goes to last working directory


Terminal Shortcuts
------------------
Esc +f: One word forward
Esc +b: One word backward
Ctrl+a: home
Ctrl+e: end
Ctrl+u: Clears from cursor to beginning
Ctrl+k: Clears from cursor to end
Ctrl+w: Deletes one word backward
Esc +d: Deletes one word forward
Ctrl+r: Search through cammand history


Using {} operators
------------------
mkdir myfolder{1,2,3}		- Creates myfolder1, myfolder2, myfolder3
mv /path/to/file.{txt,xml}	- Renames
sudo cp /etc/rc.conf{,-old}	- Backups
sudo mv /etc/rc.conf{-old,}	- Restores


Functions
---------
cd and ls
---------
function cdl { cd $1; ls;}
---------------------------


Finding a text in files
-----------------------
$grep -ir "aaaa" *.txt

Looping over a set of files
---------------------------
$for f in *.txt;do echo $f;done

Finding files
-------------
$find . –name "*.txt" –mtime 5
$find /home -iname '*.mpg' -o -iname '*.avi'	# ignore case, .mpg and .avi files

#Mind the use of '{}' and  \; (there is a space before \;). '{}' matches the file that was found, while  \; terminate the exec statement.
$find /home/ -name '*.avi' -a -size +700M -mtime -15 -exec mv '{}' /my/new/movies/ \;	

Piping and redirecting
----------------------
$cat filename.list | grep keyword > filefound.list

Making a file executable
------------------------
$chmod +x example.exe

Finding the most used commands from history
-------------------------------------------
$history|awk '{print $2}'|awk 'BEGIN {FS="|"} {print $1}'|sort|uniq -c|sort -r


Finding and Running a command from history
------------------------------------------
$history | grep nano
381 sudo nano /etc/NetworkManager/nm-system-settings.conf
387 sudo nano /etc/rc.conf
388 sudo nano /etc/rc.conf
455 sudo nano /boot/grub/menu.lst
$!455

Substituting string and running the last command
------------------------------------------------
$nanp xxx.txt
$^nanp^nano

IP-Domain Name mapping in Linux
-------------------------------
modify /etc/hosts file.

Finding specific processes
--------------------------
$ps -ef | grep java

whatis Command
--------------
whatis - search the whatis database for complete words.
$whatis man

apropos Command
---------------
apropos - search the whatis database for strings
$apropos man

whereis Command
---------------
whereis  -  locate the binary, source, and manual page files for a command
$whereis mysql
>mysql: /usr/bin/mysql /etc/mysql /usr/lib/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz

which Command
-------------
which - locate a command
$which
>/usr/bin/mysql

Finding files
-------------
$sudo find / -iname my.cnf
or
$locate my.conf
update index database for 'locate'
$updatedb						--> for Linux
$/usr/libexec/locate.updatedb 	--> for Mac OS X


Crontab Usage
-------------
# m h  dom mon dow   command
Append this to crontab file(e.g. /tmp/crontab.h0se8M/crontab)

Sample:
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
0 5 * * 1 tar -zcf /var/backups/home.tgz /home/

# Every night at 4:02am, excluding /mnt/data and /mnt/files
02 4 * * * /usr/bin/updatedb -e /mnt/data,/mnt/files


Navigation previous command arguments
-------------------------------------
$echo a b c d e
$echo [Alt+.] -> echo e
$echo !:1 -> echo a
$echo !:2 -> echo b
$echo !* -> echo a b c d e
$echo !$ -> echo e
$echo !^ -> echo a
$echo [Alt+1] [Alt+Ctrl+y] -> echo a


Zip, Unzip using gzip/gunzip and tar
------------------------------------
-> Extracting
$tar xvzf file.tar.gz		# for a gzip
$tar xvjf file-1.0.tar.bz2  # for a bzip2
$tar xvf  file-1.0.tar      # for a tar
-> Creating an archive
$tar czvf myfolder.tar.gz abcfolder/
-> Unzipping
$gunzip -c foo.tar.gz | tar xvf -
- or alternatively
$gunzip < foo.tar.gz | tar xvf -
-> Zipping
$tar cvf - foodir | gzip > foo.tar.gz
-> List all files in archive.tar verbosely.
$tar -tvf foo.tar
-> Unzipping a .zip file
$unzip letters.zip 


Setup the environment variable
-------------------
-> Use ~/.bash_profile to set your variables
$vi $HOME/.bash_profile
- In vi, add followings:
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export PATH=$PATH:$JAVA_HOME/bin
- To make it effective for the current bash session
$source .bash_profile
-> ~/.bash_profile, additional lines
export JAVA_HOME=/usr/lib/jvm/java-6-sun-1.6.0.26
export ARCHIVA_BASE=/home/deniz/Documents/Programming/FrameworksTools/Archiva/Installation/Home
export PATH=$PATH:/home/deniz/Documents/Programming/FrameworksTools/Archiva/Installation/Archiva/bin
export PATH=$PATH:/home/deniz/Documents/Programming/FrameworksTools/Maven/Installation/Maven/bin
